ROSTemplateFormatVersion: '2015-09-01'
Description: 'Create VPC ECS instance for Cloud Computing Handson for Tokyo。Image Searchのインスタンスは事前に作る。RAMユーザの作成。実行が終わったら、ISAdminUserにスイッチ。ECSにログインしてTokenを確認してください。'
Parameters:
​
  YourName:
    Type: String
    AllowedPattern: '[a-zA-Z0-9]*'
    Description: YourName(Alphabet/Number Only, No Space)
    Label: Your Name
​
  Region:
    Type: String
    Description: 使用するリージョンを選択してください。上から、香港、シンガポール、シドニー、東京です。
    AllowedValues:
      # 中国（香港） ピンク
      - cn-hongkong
      # シンガポール    黄色
      - ap-southeast-1
      # オーストラリア（シドニー）    緑色
      - ap-southeast-2
      # 日本（東京）青色
      - ap-northeast-1
​
  Zone:
    Type: String
    Description: 使用するリージョンのゾーンを選択してください。上から、香港、シンガポール、シドニー、東京です。
    AllowedValues:
      # 中国（香港） ピンク
      - cn-hongkong-b
      # シンガポール    黄色
      - ap-southeast-1a
      # オーストラリア（シドニー）    緑色
      - ap-southeast-2a
      # 日本（東京）青色
      - ap-northeast-1a
​
  ImageSearchInstanceName:
    Type: String
    AllowedPattern: '[a-zA-Z0-9]*'
    Description: 作成済みインスタンス名を入力してください
​
  InstanceType:
    Type: String
    Description: ECS Instance Type
    AllowedValues:
      - ecs.t5-lc1m1.small
      - ecs.sn1.medium
      - ecs.c5.large
      - ecs.g5.large
      - ecs.c5.xlarge
    Label: ECS Instance Type
    Default: ecs.t5-lc1m1.small
​
​
  RootPassword:
    Type: String
    NoEcho: true
    Description: ECS root Password
    Label: ECS root Password
​
Resources:
​
  RamImageSearchHandsOnUser:
    Type: 'ALIYUN::RAM::User'
    Properties:
      UserName: {"Fn::Join": [ "-", ["ImageSearchHandsOnUser", Ref: YourName]]}
​
​
  RamImageSearchHandsOnUserAK:
    Type: 'ALIYUN::RAM::AccessKey'
    Properties:
      UserName: 
        'Fn::GetAtt':
          - RamImageSearchHandsOnUser
          - UserName
​
​
  vpc1:
    Type: 'ALIYUN::ECS::VPC'
    Properties:
      CidrBlock: 10.0.0.0/8
      VpcName: {"Fn::Join": [ "-", ["vpc-imagesearchhandson", Ref: YourName]]}
​
  vswitch1:
    Type: 'ALIYUN::ECS::VSwitch'
    Properties:
      VpcId:
        Ref: vpc1
      VSwitchName: {"Fn::Join": [ "-", ["vswitch-imagesearchhandson", Ref: YourName]]}
      ZoneId: ap-northeast-1a
      CidrBlock: 10.0.0.0/24
​
​
  ecs1:
    Type: 'ALIYUN::ECS::Instance'
    Properties:
      InstanceName: {"Fn::Join": [ "-", ["ecs-imagesearchhandson", Ref: YourName]]}
      HostName:     {"Fn::Join": [ "-", ["imagesearchhandson", Ref: YourName]]}
      Description: imagesearchhandson
      ZoneId:
        Ref: Zone
      InstanceType:
        Ref: InstanceType
      InstanceChargeType: PostPaid
      SpotStrategy: NoSpot
      ImageId: centos_7
      SystemDiskCategory: cloud_ssd
      SystemDiskSize: '20'
      InternetMaxBandwidthIn: '1'
      InternetChargeType: PayByTraffic
      VpcId:
        Ref: vpc1
      VSwitchId:
        Ref: vswitch1
      SecurityGroupId:
        Ref: sg1
      Password:
        Ref: RootPassword
​
      UserData:
        'Fn::Join':
          - ''
          - - |
              #!/bin/sh
            - |
              ( yum -y update;
            - |
              yum install -y yum-utils device-mapper-persistent-data lvm2;
            - |
              yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo;
            - |
              yum install -y docker-ce docker-ce-cli containerd.io;
            - |
              systemctl start docker;
            - |
              systemctl enable docker;
            - |
              docker --version;
            - |
              yum install -y git;
            - |
              cd /root/;
            - |
              git clone https://github.com/kanzai935/imagesearchhandson.git;
            - |
              cd imagesearchhandson;
            - |
              cat <<EOF > /root/imagesearchhandson/env;
            - ACCESS_KEY_ID=
            - 'Fn::GetAtt':
              - 'RamImageSearchHandsOnUserAK'
              - 'AccessKeyId'
            - |+
​
            - ACCESS_KEY_SECRET=
            - 'Fn::GetAtt':
              - 'RamImageSearchHandsOnUserAK'
              - 'AccessKeySecret'
            - |+
​
            - REGION=
            - Ref: Region
            - |+
​
            - BUCKET_NAME=
            - 'Fn::GetAtt':
              - MyBucket
              - Name
            - |+
​
​
            - IMAGESEARCH_INSTANCE_NAME=
            - Ref: ImageSearchInstanceName
            - |+
​
              EOF
            - |
              docker image build -t notebook .;
            - |
              echo "## Jupyter Notebook Token: ";
            - |
              docker run --rm -v /root/imagesearchhandson:/home/jupyter/jupyter-working --env-file=env -d -p 8888:8888 -u root notebook;
            - |
            　docker logs `docker ps | grep notebook | awk '{print $1}'` 2>&1 | grep "  http://0.0.0.0" -B 2
            - |
              
              ) 2>&1 | tee -a /root/userdata-result.txt
            - |
              done
# see also: curl http://100.100.100.200/latest/user-data
​
​
  MyBucket:
    Type: 'ALIYUN::OSS::Bucket'
    Properties:
      BucketName: {"Fn::Join": [ "-", ["imagesearchhandson", Ref: YourName]]}
      AccessControl: public-read
​
  sg1:
    Type: 'ALIYUN::ECS::SecurityGroup'
    Properties:
      VpcId:
        Ref: vpc1
      SecurityGroupName: {"Fn::Join": [ "-", ["sg-imagesearchhandson", Ref: YourName]]}
      SecurityGroupIngress:
        - PortRange: 22/22
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
        - PortRange: 8888/8888
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
      SecurityGroupEgress:
        - PortRange: '-1/-1'
          Priority: 1
          IpProtocol: all
          DestCidrIp: 0.0.0.0/0
          NicType: intranet
​
​
Outputs:
  env_YourName:
    Value:
      Ref: YourName
  env_Region:
    Value:
      Ref: Region
  env_Zone:
    Value:
      Ref: Zone
​
  vpc_wp_vpc_id:
    Value:
      'Fn::GetAtt':
        - vpc1
        - VpcId
  vpc_wp_vsw_id:
    Value:
      'Fn::GetAtt':
        - vswitch1
        - VSwitchId
  ecs_instance_id:
    Value:
      'Fn::GetAtt':
        - ecs1
        - InstanceId
  ecs_HostName:
    Value:
      'Fn::GetAtt':
        - ecs1
        - HostName
  ecs_PrivateIp:
    Value:
      'Fn::GetAtt':
        - ecs1
        - PrivateIp
  ecs_PublicIp:
    Value:
      'Fn::GetAtt':
        - ecs1
        - PublicIp
​
  OSSName:
    Value:
      'Fn::GetAtt':
        - MyBucket
        - Name
  OSSDomainName:
    Value:
      'Fn::GetAtt':
        - MyBucket
        - DomainName
